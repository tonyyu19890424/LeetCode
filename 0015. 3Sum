Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Notice that the solution set must not contain duplicate triplets.

Input: nums = [-1,0,1,2,-1,-4]
Output: [[-1,-1,2],[-1,0,1]]

/**
 * @param {number[]} nums
 * @return {number[][]}
 */
var threeSum = function(nums) {
    let res = []
    nums = nums.sort((a,b) => a-b)
    let len = nums.length;
    for(let i = 0; i < len; i++){
        if(nums[i] > 0){
            break;
        }
        if(i > 0 && nums[i] == nums[i - 1]){
            continue;
        }
        let c = -nums[i]
        console.log(c);
        let left = i + 1
        let right = len - 1
        while(left < right){
            if(nums[left] + nums[right] === c){
                res.push([nums[i],nums[left],nums[right]])
                while(left < right && nums[left] === nums[left+1]) left++;
                while(left < right && nums[right] === nums[right-1]) right--;
                left++;
                right--;
            }else if(nums[left] + nums[right] < c){
                left++;
            }else if(nums[left] + nums[right] > c){
                right--;
            }
        }
    }
    return res;
};
